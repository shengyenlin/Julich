# general settings
name: GaussianGrayDenoising_Restormer
model_type: ImageCleanModel
scale: 1
num_gpu: 4  # set num_gpu: 0 for cpu mode
manual_seed: 0
log_dir: /p/scratch/delia-mp/lin4/experiment_result/restormer/0803-universal-rician-15

# dataset and data loader settings
datasets:
  train:
    name: TrainSet
    type: Dataset_PairedImage
    in_ch: 1    ## Grayscale image
    flag: grayscale
    dataroot_gt: /p/scratch/delia-mp/lin4/RestormerGrayScaleData/clean/train_patches
    dataroot_lq: /p/scratch/delia-mp/lin4/RestormerGrayScaleData/rician_noise_15/train_patches
    geometric_augs: true # rotation and flip

    filename_tmpl: '{}'
    io_backend:
      type: disk

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8 
    batch_size_per_gpu: 4 # effective batch size = # GPU * batch_size_per_gpu

    ### ------- Training on single fixed-patch size 128x128---------
    mini_batch_sizes: [4]   # Batch size per gpu
    iters: [300000]
    gt_size: 128   
    gt_sizes: [128]
    ### ------------------------------------------------------------

    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: ValSet
    type: Dataset_PairedImage
    in_ch: 1  ## Grayscale image
    dataroot_gt: /p/scratch/delia-mp/lin4/RestormerGrayScaleData/clean/test/BSD68
    dataroot_lq: /p/scratch/delia-mp/lin4/RestormerGrayScaleData/rician_noise_15/test/BSD68
    io_backend:
      type: disk

# network structures
network_g:
  type: Restormer
  inp_channels: 1
  out_channels: 1
  dim: 48
  num_blocks: [4,6,6,8]
  num_refinement_blocks: 4
  heads: [1,2,4,8]
  ffn_expansion_factor: 2.66
  bias: False
  LayerNorm_type: BiasFree
  dual_pixel_task: False


# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: /p/scratch/delia-mp/lin4/experiment_result/restormer/0803-universal-rician-15/training_states/272000.state

# training settings
train:
  total_iter: 300000
  warmup_iter: -1 # no warm up
  use_grad_clip: true

  # Split 300k iterations into two cycles. 
  # 1st cycle: fixed 3e-4 LR for 92k iters. 
  # 2nd cycle: cosine annealing (3e-4 to 1e-6) for 208k iters.
  scheduler:
    type: CosineAnnealingRestartCyclicLR
    periods: [92000, 208000]       
    restart_weights: [1,1]
    eta_mins: [0.0003,0.000001]   
  
  mixing_augs:
    mixup: false

  optim_g:
    type: AdamW
    lr: !!float 3e-4
    weight_decay: !!float 1e-4
    betas: [0.9, 0.999]
  
  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1
    reduction: mean

# validation settings
val:
  window_size: 8
  val_freq: !!float 4e3
  save_img: false
  rgb2bgr: true
  use_image: false
  max_minibatch: 8

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 300
  save_checkpoint_freq: !!float 4e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~ #TODO: change if I want to resumse

# dist training settings
dist_params:
  backend: nccl
  port: 29500
